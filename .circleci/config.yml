version: 2

jobs:
  "build":
    docker: &DOCKERIMAGE
      - image: circleci/node:9.11.1-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-{{ .Branch }}
            - yarn-packages-master
            - yarn-packages-
      - run:
          name: Install Gulp
          command: sudo npm i -g gulp-cli
      - run:
          name: Install Node Packages
          command: yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
      - run:
          name: Build App
          command: yarn dist
      - persist_to_workspace:
          root: .
          paths:
            - dist

  "e2e":
    docker: *DOCKERIMAGE
    steps:
      - checkout
      - attach_workspace:
            at: .
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-{{ .Branch }}
            - yarn-packages-master
            - yarn-packages-
      - run:
          name: E2E Tests
          command: yarn test

  "stage":
    docker: &DOCKERIMAGE
      - image: jenkinsrise/cci-v2-launcher-electron:0.0.5
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-{{ .Branch }}
            - yarn-packages-master
            - yarn-packages-
      - run:
          name: Setup gsutil
          command: |
            if [[ -n ${CIRCLE_PR_NUMBER} ]]
            then
              openssl aes-256-cbc -K $encrypted_40ef2f4394e3_key -iv $encrypted_40ef2f4394e3_iv -in client-secret.json.enc -out client-secret.json -d
              curl https://sdk.cloud.google.com | bash
              source $HOME/google-cloud-sdk/path.bash.inc
              gcloud auth activate-service-account --key-file client-secret.json
            fi
      - run:
          name: Deploy to staging
          command: |
            if [[ -n ${CIRCLE_PR_NUMBER} ]]
            then
                gsutil cp dist/*.zip gs://selfkey-builds/linux/$CIRCLE_BUILD_NUM-$CIRCLE_BRANCH/
            fi      

workflows:
  version: 2
  workflow1:
    jobs:
      - "build"
      - "e2e":
        requires:
            - build
      - "stage":
          requires:
            - e2e


